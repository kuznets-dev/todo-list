{"version":3,"sources":["components/Header.js","components/TodoForm.js","components/TodoItem.js","components/TodoList.js","components/TodoFilter.js","components/TodoSort.js","components/Pagination.js","axiosConfig.js","components/Todo.js","components/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["Header","userName","isLogin","setIsLogin","Grid","style","background","container","direction","justify","alignItems","Typography","padding","color","variant","align","Button","onClick","localStorage","removeItem","marginRight","textTransform","fontSize","TodoForm","addTodo","useState","todoName","setTodoName","handleSumbit","event","preventDefault","onSubmit","TextField","value","onChange","target","onKeyDown","key","placeholder","margin","fullWidth","InputLabelProps","shrink","TodoItem","todo","removeTodo","changeTodo","changeNameTodo","setChangeNameTodo","name","ListItem","item","xs","Checkbox","done","handleDone","icon","checkedIcon","checked","multiline","autoFocus","e","handleKeyDown","onBlur","ListItemText","primary","overflowWrap","updatedAt","IconButton","aria-label","uuid","TodoList","todos","checkTodo","List","map","TodoFilter","todoStatus","setTodoStatus","ButtonGroup","TodoSort","todoSort","setTodoSort","handleSort","date","component","size","Pagination","pageCount","currentPage","setCurrentPage","pages","Array","fill","_","i","ArrowBackIos","length","ArrowForwardIos","axios","create","baseURL","Todo","setUserName","setTodos","setPageCount","alert","message","statusCode","errorAlert","setErrorAlert","fetchTodos","useCallback","a","token","getItem","defaults","headers","common","get","params","filterBy","orderBy","page","limit","response","data","rows","console","log","useEffect","post","status","id","delete","patch","handleClose","prev","className","marginTop","Snackbar","open","autoHideDuration","onClose","Alert","severity","AlertTitle","Auth","user","isSignup","setIsSignup","signUp","login","handleChange","Container","type","label","password","App","setUser","isToken","res","setItem","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98484e93.chunk.js","sourcesContent":["import { Button, Grid, Typography } from \"@material-ui/core\";\n\nexport const Header = ({ userName, isLogin, setIsLogin }) => {\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setIsLogin(false);\n    }\n\n    return(\n            <Grid\n                style={{ background: \"#3f51b5\" }}\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\">\n            <Typography\n                style={{ padding: 20, color:\"white\" }}\n                variant=\"h3\"\n                align=\"left\">\n                {isLogin ? userName : \"Todo App\"}\n            </Typography>\n            {isLogin && <Button\n                onClick={() => logout()}\n                style={{ marginRight: 30, textTransform: \"none\", fontSize: 18 }}\n                variant=\"contained\"\n                color=\"secondary\">\n                Logout\n            </Button>}\n        </Grid>\n    )\n}","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TodoForm({ addTodo }) {\n    const [todoName, setTodoName] = useState('');\n\n    const handleChange = (event => {\n        setTodoName(event.target.value)\n    })\n\n    const handleSumbit = (event => {\n        event.preventDefault();\n        addTodo(todoName);\n        setTodoName('');\n    })\n\n    const handleKeyDown = (event => {\n        if (event.key === 'Enter') {\n            handleSumbit(event);\n        }\n    })\n\n    return (\n        <form onSubmit={handleSumbit}>\n            <TextField\n                value={todoName}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown} \n                placeholder=\"I want to...\"\n                margin=\"normal\"\n                fullWidth\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"outlined\"\n            />\n        </form>\n    )\n}\n\nexport default TodoForm;","import React, {useState} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Checkbox, Grid, ListItemText, TextField } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nfunction TodoItem({ todo, removeTodo, changeTodo }) {\n\n    const [changeNameTodo, setChangeNameTodo] = useState(false);\n    const [todoName, setTodoName] = useState(todo.name);\n\n    const handleKeyDown = (todo, e) => {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n\n            setChangeNameTodo(false);\n            changeTodo(todo, todoName, todo.done);\n        };\n        if (e.key === \"Escape\") {\n            setChangeNameTodo(false);\n            setTodoName(todo.name);\n        };\n    }\n\n    const handleDone = (todo) => {\n        changeTodo(todo, todoName, !todo.done)\n    }\n\n    const onBlur = () => {\n        setChangeNameTodo(false);\n        setTodoName(todo.name);\n    }\n\n    return (\n        <ListItem>\n            <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\">\n                <Grid item xs={1}>\n                    <Checkbox\n                    onClick={() => handleDone(todo)}\n                    icon={<DoneIcon />}\n                    checkedIcon={<DoneAllIcon\n                    color=\"primary\" />}\n                    checked={todo.done} />\n                </Grid>\n                <Grid item xs={8}>\n                    {changeNameTodo \n                        ? <TextField \n                            multiline={true}\n                            value={todoName}\n                            autoFocus={true}\n                            variant='outlined'\n                            onChange={(e) => setTodoName(e.target.value)}\n                            onKeyDown={(e) => handleKeyDown(todo, e)} \n                            onBlur={onBlur} />\n                        :   <ListItemText\n                            primary={todo.name}\n                            style={{overflowWrap: 'break-word'}}\n                            multiline='true'\n                            onClick={() => setChangeNameTodo(true)} />\n                    }\n                </Grid>\n                <Grid item xs={2}>\n                    <ListItemText>\n                        {todo.updatedAt}\n                    </ListItemText>\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => removeTodo(todo.uuid)}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </ListItem>\n    )\n}\n\nexport default TodoItem;","import List from '@material-ui/core/List';\nimport TodoItem from './TodoItem';\n\nfunction TodoList({ todos, removeTodo, checkTodo, changeTodo }) {\n    return (\n        <List>\n            {todos.map(todo => \n                <TodoItem\n                    key={todo.uuid}\n                    todo={todo}\n                    removeTodo={removeTodo}\n                    checkTodo={checkTodo}\n                    changeTodo={changeTodo}\n                />)\n            }\n        </List>\n    )\n}\n\nexport default TodoList;","import React from 'react';\nimport { Button, ButtonGroup } from '@material-ui/core';\n\nfunction TodoFilter({ todoStatus, setTodoStatus }) {\n\n    return (\n        <ButtonGroup>\n            <Button\n                onClick={() => setTodoStatus('')}\n                variant={todoStatus === \"\" ? \"contained\" : \"outlined\"}\n                color=\"default\">\n                All\n            </Button>\n            <Button\n                onClick={() => setTodoStatus('done')}\n                variant={todoStatus === \"done\" ? \"contained\" : \"outlined\"}\n                color=\"primary\">\n                Done\n            </Button>\n            <Button\n                onClick={() => setTodoStatus('undone')}\n                variant={todoStatus === \"undone\" ? \"contained\" : \"outlined\"}\n                color=\"secondary\">\n                Undone\n            </Button>\n        </ButtonGroup>\n    )\n}\n\nexport default TodoFilter;","import React from 'react';\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nfunction TodoSort({ todoSort, setTodoSort}) {\n\n    const handleSort = (date) => {\n        if (date !== todoSort){\n            setTodoSort(date);\n        }\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\">\n            <Typography\n                variant=\"h6\"\n                component=\"h2\">\n                Sorted by Date\n            </Typography>\n            <IconButton\n                color={todoSort ? 'primary' : 'default'}\n                onClick={() => handleSort(true)}\n                aria-label=\"delete\"\n                size=\"small\">\n                <ArrowUpwardIcon fontSize=\"inherit\" />\n            </IconButton>\n            <IconButton\n                color={!todoSort ? 'primary' : 'default'}\n                onClick={() => handleSort(false)}\n                aria-label=\"delete\"\n                size=\"small\">\n                <ArrowDownwardIcon fontSize=\"inherit\" />\n            </IconButton>\n        </Grid>\n    )\n}\n\nexport default TodoSort;","import { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport React from 'react';\n\nfunction Pagination({ pageCount, currentPage, setCurrentPage }) {\n    \n    const pages = new Array(pageCount).fill('').map((_, i) => i + 1)\n    return (\n        <Grid\n            container\n            justify='center'>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(1)}>\n                <ArrowBackIos />\n            </Button>\n            <Grid>\n                <ButtonGroup>\n                    {pages.map(item => (\n                        <Button\n                            key={item}\n                            color=\"primary\"\n                            variant={item === currentPage ? \"contained\" : \"outlined\"}\n                            onClick={() => setCurrentPage(item)}>\n                            {item}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </Grid>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(pages.length)}>\n                <ArrowForwardIos />\n            </Button>\n        </Grid>\n    )\n}\n\nexport default Pagination;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: `http://localhost:3000`\n});","import React, { useCallback, useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport TodoFilter from './TodoFilter';\nimport TodoSort from './TodoSort';\nimport { Grid } from '@material-ui/core';\nimport Pagination from './Pagination';\nimport axios from '../axiosConfig';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { AlertTitle } from '@material-ui/lab';\n\nfunction Todo({ setUserName }) {\n\n    // State\n    const [todos, setTodos] = useState([]);\n    const [todoStatus, setTodoStatus] = useState('');\n    const [todoSort, setTodoSort] = useState(true);\n    const [pageCount, setPageCount] = useState(1)\n    const [currentPage, setCurrentPage] = useState(1);\n    const [errorAlert, setErrorAlert] = useState({ alert: false, message: 'message', statusCode: 'status' });\n\n    // Fetch API\n    // GET\n    const fetchTodos = useCallback(async () => {\n        try {\n            const token = localStorage.getItem('token')\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            const response = await axios.get('/tasks', {\n                params: {\n                    filterBy: todoStatus,\n                    orderBy: todoSort ? \"asc\" : 'desc',\n                    page: currentPage,\n                    limit: 5\n                }\n            });\n            setUserName(response.data.name);\n            setPageCount(response.data.pageCount);\n            setTodos(response.data.rows);\n        } catch (err) {\n            console.log(err.response);\n        }\n    }, [setUserName, todoStatus, todoSort, currentPage]);\n\n    useEffect(() => {\n        fetchTodos()\n    }, [fetchTodos])\n\n    // POST\n    // Add new todo\n    const addTodo = async (todoName) => {\n        try {\n            await axios.post('/task',\n                {\n                    name: todoName,\n                    done: false,\n                });\n            await fetchTodos();\n        }\n        catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n\n    // DELETE\n    // Remove todo\n    const removeTodo = async (id) => {\n        try {\n            await axios.delete(`task/${id}`);\n            await fetchTodos();\n        }\n        catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n    // PATCH\n    // Change and rename todo\n    const changeTodo = async (todo, name, done) => {\n        try {\n            await axios.patch(`/task/${todo.uuid}`, {\n                name: name,\n                done: done\n            });\n            await fetchTodos();\n        }\n        catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n\n    const handleClose = () => {\n        setErrorAlert(prev => ({ ...prev, alert: false }));\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <Typography\n                style={{ marginTop: 50 }}\n                variant=\"h1\"\n                component=\"h2\"\n                align=\"center\">\n                Todo\n            </Typography>\n            <TodoForm addTodo={addTodo} />\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\">\n                <Grid>\n                    <TodoFilter\n                        todoStatus={todoStatus}\n                        setTodoStatus={setTodoStatus}\n                    />\n                </Grid>\n                <Grid>\n                    <TodoSort\n                        todoSort={todoSort}\n                        setTodoSort={setTodoSort}>\n                    </TodoSort>\n                </Grid>\n            </Grid>\n            <TodoList\n                todos={todos}\n                removeTodo={removeTodo}\n                changeTodo={changeTodo}\n            />\n            {(pageCount > 1) &&\n                <Pagination\n                    pageCount={pageCount}\n                    currentPage={currentPage}\n                    setCurrentPage={setCurrentPage}>\n                </Pagination>\n            }\n            <Snackbar open={errorAlert.alert} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    <AlertTitle>{`${errorAlert.message}`}</AlertTitle>\n                    {`Status code: ${errorAlert.statusCode}`}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}\n\nexport default Todo;","import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';\n\nfunction Auth({ user, isSignup, setIsSignup, signUp, login, handleChange }) {\n    return (\n        <div className=\"wrapper\">\n            <form onSubmit={e => e.preventDefault()}>\n                <Container>\n                    <Grid\n                        container\n                        direction=\"column\"\n                        justify=\"center\"\n                        align=\"center\">\n                        <Typography\n                            style={{ marginTop: 100 }}\n                            variant=\"h3\"\n                            align=\"center\">\n                            {isSignup ? 'SignUp': 'Login'}\n                    </Typography>\n                        <TextField\n                            type=\"name\"\n                            name=\"name\"\n                            onChange={handleChange}\n                            value={user.name}\n                            style={{ marginTop: 30 }}\n                            label=\"Username\" />\n                        <TextField\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={handleChange}\n                            value={user.password}\n                            style={{ marginTop: 30 }}\n                            label=\"Password\" />\n                    </Grid>\n                    <Grid\n                    style={{ marginTop: 30 }}\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    align=\"center\">\n                        {isSignup\n                        ?<Button\n                            onClick={signUp}\n                            type=\"submit\"\n                            style={{ marginRight: 30, textTransform: 'none' }}\n                            variant=\"contained\"\n                            color=\"primary\">\n                            SignUp\n                        </Button>\n                        :<Button\n                            onClick={login}\n                            type=\"submit\"\n                            style={{ marginRight: 30, textTransform: 'none' }}\n                            variant=\"contained\"\n                            color=\"primary\">\n                            Login\n                        </Button>}\n                        <Button\n                            onClick={() => setIsSignup(!isSignup)}\n                            style={{ textTransform: 'none' }}\n                            color=\"primary\">\n                            {isSignup ? 'Do you have account?': 'No accaunt?'}\n                        </Button>\n                    </Grid>\n                </Container>\n            </form>\n        </div>\n    )    \n}\n\nexport default Auth;","import { useCallback, useEffect, useState } from \"react\";\nimport { Container, Snackbar } from \"@material-ui/core\";\nimport { Header } from \"./components/Header\";\nimport Todo from \"./components/Todo\";\nimport Auth from \"./components/Auth\";\nimport axios from './axiosConfig';\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nfunction App() {\n\n    const [user, setUser] = useState({ name: '', password: '' });\n    const [userName, setUserName] = useState('');\n    const [isSignup, setIsSignup] = useState(false);\n    const [isLogin, setIsLogin] = useState(false);\n    const [errorAlert, setErrorAlert] = useState({alert: false, message: 'message', statusCode: 'status'});\n\n    const isToken = useCallback(() => {\n        if (localStorage.token) setIsLogin(true);\n    }, []);\n\n    useEffect(() => {\n        isToken();\n    }, [isToken]);\n\n    const signUp = async () => {\n        try {\n            await axios.post('/registration', {\n                name: user.name,\n                password: user.password\n            })\n            setUser({ name: '', password: '' });\n        } catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;   \n            setErrorAlert({alert: true, message: message, statusCode: status});\n        }\n    }\n\n    const login = async () => {\n        try {\n            const res = await axios.post('/login', {\n                name: user.name,\n                password: user.password\n            });\n            const token = res.data.token;\n            localStorage.setItem('token', token);\n            setUser({ name: '', password: '' });\n            setIsLogin(true);            \n        } catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;   \n            setErrorAlert({alert: true, message: message, statusCode: status});\n        }\n    }\n\n    const handleChange = (e) => {\n        setUser({...user, [e.target.name]: e.target.value});\n    }\n\n    const handleClose = () => {\n        setErrorAlert(prev => ({...prev, alert: false}));\n    }\n\n    return(\n        <Container\n            style={{ padding: 0 }}\n            maxWidth=\"xl\">\n            <Header\n                userName={userName}\n                isLogin={isLogin}\n                setIsLogin={setIsLogin}/>\n            {isLogin\n            ? <Todo\n                setUserName={setUserName}/>\n            :<Auth\n                user={user}\n                isSignup={isSignup}\n                setIsSignup={setIsSignup}\n                signUp={signUp}\n                login={login}\n                handleChange={handleChange}/>}\n            <Snackbar open={errorAlert.alert} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    <AlertTitle>{`${errorAlert.message}`}</AlertTitle>\n                    {`Status code: ${errorAlert.statusCode}`}\n                </Alert>\n            </Snackbar>\n        </Container>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}