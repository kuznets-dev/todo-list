{"version":3,"sources":["components/Header.js","components/TodoForm.js","components/TodoItem.js","components/TodoFilter.js","components/TodoSort.js","components/Pagination.js","axiosConfig.js","components/Todo.js","components/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["Header","isLogin","logout","Grid","style","background","container","direction","justify","alignItems","Typography","padding","color","variant","align","localStorage","getItem","Button","onClick","marginRight","textTransform","fontSize","TodoForm","addTodo","useState","todoName","setTodoName","handleSumbit","event","preventDefault","onSubmit","TextField","value","onChange","target","onKeyDown","key","placeholder","margin","fullWidth","InputLabelProps","shrink","TodoItem","todo","removeTodo","changeTodo","changeNameTodo","setChangeNameTodo","name","disableButton","setDisableButton","ListItem","item","xs","Checkbox","done","handleDone","icon","checkedIcon","checked","multiline","autoFocus","e","handleKeyDown","onBlur","ListItemText","primary","overflowWrap","updatedAt","IconButton","aria-label","disabled","uuid","TodoFilter","todoStatus","setTodoStatus","ButtonGroup","TodoSort","todoSort","setTodoSort","handleSortTask","sort","component","size","Pagination","pageCount","currentPage","setCurrentPage","pages","Array","fill","map","_","i","ArrowBackIos","length","ArrowForwardIos","axios","create","baseURL","process","Todo","setIsLogin","todos","setTodos","setPageCount","alert","message","statusCode","errorAlert","setErrorAlert","fetchTodos","useCallback","a","token","defaults","headers","common","get","params","filterBy","orderBy","page","limit","response","data","rows","status","jwt","removeItem","useEffect","post","id","delete","patch","closeAlert","prev","className","marginTop","List","Snackbar","open","autoHideDuration","onClose","Alert","severity","AlertTitle","Auth","isSignup","setIsSignup","signUp","login","password","user","setUser","handleChangeUser","Container","type","label","App","checkToken","res","setItem","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qgBAEaA,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAE9B,OACQ,eAACC,EAAA,EAAD,CACIC,MAAO,CAAEC,WAAY,WACrBC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SALf,UAMA,cAACC,EAAA,EAAD,CACIN,MAAO,CAAEO,QAAS,GAAIC,MAAM,SAC5BC,QAAQ,KACRC,MAAM,OAHV,SAIKb,EAAUc,aAAaC,QAAQ,QAAU,aAE7Cf,GAAW,cAACgB,EAAA,EAAD,CACRC,QAAS,kBAAMhB,KACfE,MAAO,CAAEe,YAAa,GAAIC,cAAe,OAAQC,SAAU,IAC3DR,QAAQ,YACRD,MAAM,YAJE,wB,SCuBTU,MArCf,YAAgC,IAAZC,EAAW,EAAXA,QAChB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAgB,SAAAC,GAClBA,EAAMC,iBACNN,EAAQE,GACRC,EAAY,KAShB,OACI,sBAAMI,SAAUH,EAAhB,SACI,cAACI,EAAA,EAAD,CACIC,MAAOP,EACPQ,SApBc,SAAAL,GACtBF,EAAYE,EAAMM,OAAOF,QAoBjBG,UAXW,SAAAP,GACD,UAAdA,EAAMQ,KACNT,EAAaC,IAUTS,YAAY,eACZC,OAAO,SACPC,WAAS,EACTC,gBAAiB,CACbC,QAAQ,GAEZ5B,QAAQ,gB,mGCwDT6B,MAlFf,YAAqD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAElC,EAA4CrB,oBAAS,GAArD,mBAAOsB,EAAP,KAAuBC,EAAvB,KACA,EAAgCvB,mBAASmB,EAAKK,MAA9C,mBAAOvB,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOyB,EAAP,KAAsBC,EAAtB,KA6BA,OACI,cAACC,EAAA,EAAD,UACI,eAAChD,EAAA,EAAD,CACIG,WAAS,EACTC,UAAU,MACVE,WAAW,SAHf,UAII,cAACN,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CACApC,QAAS,kBAtBN,SAACyB,GAChBE,EAAWF,EAAMlB,GAAWkB,EAAKY,MAqBNC,CAAWb,IAC1Bc,KAAM,cAAC,IAAD,IACNC,YAAa,cAAC,IAAD,CACb9C,MAAM,YACN+C,QAAShB,EAAKY,SAElB,cAACpD,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACKP,EACK,cAACf,EAAA,EAAD,CACE6B,WAAW,EACX5B,MAAOP,EACPoC,WAAW,EACXhD,QAAQ,WACRoB,SAAU,SAAC6B,GAAD,OAAOpC,EAAYoC,EAAE5B,OAAOF,QACtCG,UAAW,SAAC2B,GAAD,OAjDb,SAACnB,EAAMmB,GACX,UAAVA,EAAE1B,MACF0B,EAAEjC,iBAEFkB,GAAkB,GAClBF,EAAWF,EAAMlB,EAAUkB,EAAKY,OAEtB,WAAVO,EAAE1B,MACFW,GAAkB,GAClBrB,EAAYiB,EAAKK,OAwCiBe,CAAcpB,EAAMmB,IACtCE,OAjCT,WACXjB,GAAkB,GAClBrB,EAAYiB,EAAKK,SAgCG,cAACiB,EAAA,EAAD,CACAC,QAASvB,EAAKK,KACd5C,MAAO,CAAC+D,aAAc,cACtBP,UAAU,OACV1C,QAAS,kBAAM6B,GAAkB,QAG7C,cAAC5C,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACI,cAACY,EAAA,EAAD,UACKtB,EAAKyB,cAGd,cAACjE,EAAA,EAAD,CAAMiD,MAAI,EAACC,GAAI,EAAf,SACI,cAACgB,EAAA,EAAD,CACIC,aAAW,SACXC,SAAUtB,EACV/B,QAAS,kBA5CzBgC,GAAiB,QACjBN,EAAWD,EAAK6B,OAwCJ,SAII,cAAC,IAAD,c,SCrDTC,MA1Bf,YAAoD,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAE9B,OACI,eAACC,EAAA,EAAD,WACI,cAAC3D,EAAA,EAAD,CACIC,QAAS,kBAAMyD,EAAc,KAC7B9D,QAAwB,KAAf6D,EAAoB,YAAc,WAC3C9D,MAAM,UAHV,iBAMA,cAACK,EAAA,EAAD,CACIC,QAAS,kBAAMyD,EAAc,SAC7B9D,QAAwB,SAAf6D,EAAwB,YAAc,WAC/C9D,MAAM,UAHV,kBAMA,cAACK,EAAA,EAAD,CACIC,QAAS,kBAAMyD,EAAc,WAC7B9D,QAAwB,WAAf6D,EAA0B,YAAc,WACjD9D,MAAM,YAHV,wB,oCCsBGiE,MApCf,YAA6C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAEpBC,EAAiB,SAACC,GAChBA,IAASH,GACTC,EAAYE,IAIpB,OACI,eAAC9E,EAAA,EAAD,CACIG,WAAS,EACTC,UAAU,MACVE,WAAW,SAHf,UAII,cAACC,EAAA,EAAD,CACIG,QAAQ,KACRqE,UAAU,KAFd,4BAKA,cAACb,EAAA,EAAD,CACIzD,MAAoB,SAAbkE,EAAsB,UAAY,UACzC5D,QAAS,kBAAM8D,EAAe,SAC9BV,aAAW,SACXa,KAAK,SAJT,SAKI,cAAC,IAAD,CAAiB9D,SAAS,cAE9B,cAACgD,EAAA,EAAD,CACIzD,MAAoB,QAAbkE,EAAqB,UAAY,UACxC5D,QAAS,kBAAM8D,EAAe,QAC9BV,aAAW,SACXa,KAAK,SAJT,SAKI,cAAC,IAAD,CAAmB9D,SAAS,kB,kBCG7B+D,MAlCf,YAAiE,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAEpCC,EAAQ,IAAIC,MAAMJ,GAAWK,KAAK,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAC9D,OACI,eAAC1F,EAAA,EAAD,CACIG,WAAS,EACTE,QAAQ,SAFZ,UAGI,cAACS,EAAA,EAAD,CACIL,MAAM,UACNM,QAAS,kBAAMqE,EAAe,IAFlC,SAGI,cAACO,EAAA,EAAD,MAEJ,cAAC3F,EAAA,EAAD,UACI,cAACyE,EAAA,EAAD,UACKY,EAAMG,KAAI,SAAAvC,GAAI,OACX,cAACnC,EAAA,EAAD,CAEIL,MAAM,UACNC,QAASuC,IAASkC,EAAc,YAAc,WAC9CpE,QAAS,kBAAMqE,EAAenC,IAJlC,SAKKA,GAJIA,UASrB,cAACnC,EAAA,EAAD,CACIL,MAAM,UACNM,QAAS,kBAAMqE,EAAeC,EAAMO,SAFxC,SAGI,cAACC,EAAA,EAAD,U,SC9BDC,E,OAAAA,EAAMC,OAAO,CACxBC,QAASC,W,0BCmKEC,MAvJf,YAA+B,IAAfC,EAAc,EAAdA,WAGZ,EAA0B9E,mBAAS,IAAnC,mBAAO+E,EAAP,KAAcC,EAAd,KACA,EAAoChF,mBAAS,IAA7C,mBAAOkD,EAAP,KAAmBC,EAAnB,KACA,EAAgCnD,mBAAS,QAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KACA,EAAkCvD,mBAAS,GAA3C,mBAAO6D,EAAP,KAAkBoB,EAAlB,KACA,EAAsCjF,mBAAS,GAA/C,mBAAO8D,EAAP,KAAoBC,EAApB,KACA,EAAoC/D,mBAAS,CAAEkF,OAAO,EAAOC,QAAS,UAAWC,WAAY,WAA7F,mBAAOC,EAAP,KAAmBC,EAAnB,KAIMC,EAAaC,sBAAW,sBAAC,kCAAAC,EAAA,sEAEjBC,EAAQnG,aAAaC,QAAQ,SACnCiF,EAAMkB,SAASC,QAAQC,OAAvB,+BAA2DH,GAHpC,SAIAjB,EAAMqB,IAAI,SAAU,CACvCC,OAAQ,CACJC,SAAU9C,EACV+C,QAAS3C,EACT4C,KAAMpC,EACNqC,MAAO,KATQ,OAIjBC,EAJiB,OAYvBnB,EAAamB,EAASC,KAAKxC,WAC3BmB,EAASoB,EAASC,KAAKC,MAbA,qDAejBnB,EAAU,KAAIiB,SAASC,KAAKlB,QAC5BoB,EAAS,KAAIH,SAASG,OAC5BjB,EAAc,CAAEJ,OAAO,EAAMC,QAASA,EAASC,WAAYmB,KAExCC,SAAWjH,aAAamG,OAnBpB,wBAqBnBZ,GAAW,GArBQ,2BAwBvBvF,aAAakH,WAAW,SACxB3B,GAAW,GAzBY,0DA2B5B,CAACA,EAAY5B,EAAYI,EAAUQ,IAEtC4C,qBAAU,WACNnB,MACD,CAACA,IAIJ,IAAMxF,EAAO,uCAAG,WAAOE,GAAP,iBAAAwF,EAAA,+EAEFhB,EAAMkC,KAAK,QACb,CACInF,KAAMvB,EACN8B,MAAM,IALN,uBAOFwD,IAPE,uDAUFJ,EAAU,KAAIiB,SAASC,KAAKlB,QAC5BoB,EAAS,KAAIH,SAASG,OAC5BjB,EAAc,CAAEJ,OAAO,EAAMC,QAASA,EAASC,WAAYmB,IAZnD,yDAAH,sDAkBPnF,EAAU,uCAAG,WAAOwF,GAAP,iBAAAnB,EAAA,+EAELhB,EAAMoC,OAAN,eAAqBD,IAFhB,uBAGLrB,IAHK,uDAMLJ,EAAU,KAAIiB,SAASC,KAAKlB,QAC5BoB,EAAS,KAAIH,SAASG,OAC5BjB,EAAc,CAAEJ,OAAO,EAAMC,QAASA,EAASC,WAAYmB,IARhD,yDAAH,sDAaVlF,EAAU,uCAAG,WAAOF,EAAMK,EAAMO,GAAnB,iBAAA0D,EAAA,+EAELhB,EAAMqC,MAAN,gBAAqB3F,EAAK6B,MAAQ,CACpCxB,KAAMA,EACNO,KAAMA,IAJC,uBAMLwD,IANK,uDASLJ,EAAU,KAAIiB,SAASC,KAAKlB,QAC5BoB,EAAS,KAAIH,SAASG,OAC5BjB,EAAc,CAAEJ,OAAO,EAAMC,QAASA,EAASC,WAAYmB,IAXhD,yDAAH,0DAeVQ,EAAa,WACfzB,GAAc,SAAA0B,GAAI,kCAAUA,GAAV,IAAgB9B,OAAO,QAG7C,OACI,sBAAK+B,UAAU,UAAf,UACI,cAAC/H,EAAA,EAAD,CACIN,MAAO,CAAEsI,UAAW,KACpB7H,QAAQ,KACRC,MAAM,SAHV,kBAMA,cAAC,EAAD,CAAUS,QAASA,IACnB,eAACpB,EAAA,EAAD,CACIG,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SAJf,UAKI,cAACN,EAAA,EAAD,UACI,cAAC,EAAD,CACIuE,WAAYA,EACZC,cAAeA,MAGvB,cAACxE,EAAA,EAAD,UACI,cAAC,EAAD,CACI2E,SAAUA,EACVC,YAAaA,SAIzB,cAAC4D,EAAA,EAAD,UACKpC,EAAMZ,KAAI,SAAAhD,GAAI,OACX,cAAC,EAAD,CAEIA,KAAMA,EACNC,WAAYA,EACZC,WAAYA,GAHPF,EAAK6B,WAOpBa,EAAY,GACV,cAAC,EAAD,CACIA,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,IAGxB,cAACqD,EAAA,EAAD,CAAUC,KAAMhC,EAAWH,MAAOoC,iBAAkB,IAAMC,QAASR,EAAnE,SACI,eAACS,EAAA,EAAD,CAAOD,QAASR,EAAYU,SAAS,QAArC,UACI,cAACC,EAAA,EAAD,oBAAgBrC,EAAWF,WAD/B,uBAEqBE,EAAWD,qB,QClFjCuC,MA1Ef,YAAyD,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAE3C,EAAwB/H,mBAAS,CAAEwB,KAAM,GAAIwG,SAAU,KAAvD,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAmB,SAAC7F,GACtB4F,EAAQ,2BAAKD,GAAN,kBAAa3F,EAAE5B,OAAOc,KAAOc,EAAE5B,OAAOF,UAGjD,OACI,qBAAKyG,UAAU,UAAf,SACI,sBAAM3G,SAAU,SAAAgC,GAAC,OAAIA,EAAEjC,kBAAvB,SACI,eAAC+H,EAAA,EAAD,WACI,eAACzJ,EAAA,EAAD,CACIG,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRM,MAAM,SAJV,UAKI,cAACJ,EAAA,EAAD,CACIN,MAAO,CAAEsI,UAAW,KACpB7H,QAAQ,KACRC,MAAM,SAHV,SAIKsI,EAAW,SAAW,UAE3B,cAACrH,EAAA,EAAD,CACI8H,KAAK,OACL7G,KAAK,OACLf,SAAU0H,EACV3H,MAAOyH,EAAKzG,KACZ5C,MAAO,CAAEsI,UAAW,IACpBoB,MAAM,aACV,cAAC/H,EAAA,EAAD,CACI8H,KAAK,WACL7G,KAAK,WACLf,SAAU0H,EACV3H,MAAOyH,EAAKD,SACZpJ,MAAO,CAAEsI,UAAW,IACpBoB,MAAM,gBAEd,eAAC3J,EAAA,EAAD,CACIC,MAAO,CAAEsI,UAAW,IACpBpI,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRM,MAAM,SALV,UAMKsI,EACK,cAACnI,EAAA,EAAD,CACEC,QAAS,kBAAMoI,EAAOG,IACtBI,KAAK,SACLzJ,MAAO,CAAEe,YAAa,GAAIC,cAAe,QACzCP,QAAQ,YACRD,MAAM,UALR,oBAQA,cAACK,EAAA,EAAD,CACEC,QAAS,kBAAMqI,EAAME,IACrBI,KAAK,SACLzJ,MAAO,CAAEe,YAAa,GAAIC,cAAe,QACzCP,QAAQ,YACRD,MAAM,UALR,mBAQN,cAACK,EAAA,EAAD,CACIC,QAAS,kBAAMmI,GAAaD,IAC5BhJ,MAAO,CAAEgB,cAAe,QACxBR,MAAM,UAHV,SAIKwI,EAAW,uBAAyB,2BC+BlDW,MA1Ff,WAEI,MAAgCvI,oBAAS,GAAzC,mBAAO4H,EAAP,KAAiBC,EAAjB,KACA,EAA8B7H,oBAAS,GAAvC,mBAAOvB,EAAP,KAAgBqG,EAAhB,KACA,EAAoC9E,mBAAS,CAAEkF,OAAO,EAAOC,QAAS,UAAWC,WAAY,WAA7F,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMkD,EAAahD,uBAAY,WAC3B,GAAIjG,aAAamG,MAAO,CAEpB,GADmBc,SAAWjH,aAAamG,OAGvC,YADAZ,GAAW,GAGfvF,aAAakH,WAAW,SACxB3B,GAAW,MAEhB,IAEH4B,qBAAU,WACN8B,MACD,CAACA,IAEJ,IAAMT,EAAK,uCAAG,uCAAAtC,EAAA,6DAASjE,EAAT,EAASA,KAAMwG,EAAf,EAAeA,SAAf,kBAEYvD,EAAMkC,KAAK,SAAU,CACnCnF,OACAwG,aAJE,OAEAS,EAFA,OAMA/C,EAAQ+C,EAAIpC,KAAKX,MACvBnG,aAAamJ,QAAQ,QAAShD,GAC9BnG,aAAamJ,QAAQ,OAAQlH,GAC7BsD,GAAW,GATL,kDAWAK,EAAU,KAAIiB,SAASC,KAAKlB,QAC5BoB,EAAS,KAAIH,SAASG,OAC5BjB,EAAc,CAAEJ,OAAO,EAAMC,QAASA,EAASC,WAAYmB,IAbrD,0DAAH,sDAiBLuB,EAAM,uCAAG,mCAAArC,EAAA,6DAASjE,EAAT,EAASA,KAAMwG,EAAf,EAAeA,SAAf,kBAEDvD,EAAMkC,KAAK,gBAAiB,CAC9BnF,OACAwG,aAJG,OAMPD,EAAM,CAAEvG,OAAMwG,aANP,gDAQD7C,EAAU,KAAIiB,SAASC,KAAKlB,QAC5BoB,EAAS,KAAIH,SAASG,OAC5BjB,EAAc,CAAEJ,OAAO,EAAMC,QAASA,EAASC,WAAYmB,IAVpD,yDAAH,sDAoBNQ,EAAa,WACfzB,GAAc,SAAA0B,GAAI,kCAAUA,GAAV,IAAgB9B,OAAO,QAG7C,OACI,eAACkD,EAAA,EAAD,CACIxJ,MAAO,CAAEO,QAAS,GAClBwJ,SAAS,KAFb,UAGI,cAAC,EAAD,CACIlK,QAASA,EACTC,OAhBG,WACXa,aAAakH,WAAW,SACxBlH,aAAakH,WAAW,QACxB3B,GAAW,MAcNrG,EACK,cAAC,EAAD,CACEqG,WAAYA,IAEd,cAAC,EAAD,CACE8C,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,MAAOA,IAEf,cAACX,EAAA,EAAD,CAAUC,KAAMhC,EAAWH,MAAOoC,iBAAkB,IAAMC,QAASR,EAAnE,SACI,eAACS,EAAA,EAAD,CAAOD,QAASR,EAAYU,SAAS,QAArC,UACI,cAACC,EAAA,EAAD,oBAAgBrC,EAAWF,WAD/B,uBAEqBE,EAAWD,qBChFjCwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.9aad09b6.chunk.js","sourcesContent":["import { Button, Grid, Typography } from '@material-ui/core';\n\nexport const Header = ({ isLogin, logout }) => {\n\n    return(\n            <Grid\n                style={{ background: '#3f51b5' }}\n                container\n                direction='row'\n                justify='space-between'\n                alignItems='center'>\n            <Typography\n                style={{ padding: 20, color:'white' }}\n                variant='h3'\n                align='left'>\n                {isLogin ? localStorage.getItem('name') : 'Todo App'}\n            </Typography>\n            {isLogin && <Button\n                onClick={() => logout()}\n                style={{ marginRight: 30, textTransform: 'none', fontSize: 18 }}\n                variant='contained'\n                color='secondary'>\n                Logout\n            </Button>}\n        </Grid>\n    )\n}","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TodoForm({ addTodo }) {\n    const [todoName, setTodoName] = useState('');\n\n    const handleChangeTask = (event => {\n        setTodoName(event.target.value)\n    })\n\n    const handleSumbit = (event => {\n        event.preventDefault();\n        addTodo(todoName);\n        setTodoName('');\n    })\n\n    const handleKeyDown = (event => {\n        if (event.key === 'Enter') {\n            handleSumbit(event);\n        }\n    })\n\n    return (\n        <form onSubmit={handleSumbit}>\n            <TextField\n                value={todoName}\n                onChange={handleChangeTask}\n                onKeyDown={handleKeyDown} \n                placeholder='I want to...'\n                margin='normal'\n                fullWidth\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant='outlined'\n            />\n        </form>\n    )\n}\n\nexport default TodoForm;","import React, {useState} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Checkbox, Grid, ListItemText, TextField } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nfunction TodoItem({ todo, removeTodo, changeTodo }) {\n\n    const [changeNameTodo, setChangeNameTodo] = useState(false);\n    const [todoName, setTodoName] = useState(todo.name);\n    const [disableButton, setDisableButton] = useState(false);\n\n    const handleKeyDown = (todo, e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n\n            setChangeNameTodo(false);\n            changeTodo(todo, todoName, todo.done);\n        };\n        if (e.key === 'Escape') {\n            setChangeNameTodo(false);\n            setTodoName(todo.name);\n        };\n    }\n\n    const handleDone = (todo) => {\n        changeTodo(todo, todoName, !todo.done)\n    }\n\n    const onBlur = () => {\n        setChangeNameTodo(false);\n        setTodoName(todo.name);\n    }\n\n    const handleDelete = () => {\n        setDisableButton(true);\n        removeTodo(todo.uuid);\n    }\n\n    return (\n        <ListItem>\n            <Grid\n                container\n                direction='row'\n                alignItems='center'>\n                <Grid item xs={1}>\n                    <Checkbox\n                    onClick={() => handleDone(todo)}\n                    icon={<DoneIcon />}\n                    checkedIcon={<DoneAllIcon\n                    color='primary' />}\n                    checked={todo.done} />\n                </Grid>\n                <Grid item xs={8}>\n                    {changeNameTodo \n                        ? <TextField \n                            multiline={true}\n                            value={todoName}\n                            autoFocus={true}\n                            variant='outlined'\n                            onChange={(e) => setTodoName(e.target.value)}\n                            onKeyDown={(e) => handleKeyDown(todo, e)} \n                            onBlur={onBlur} />\n                        :   <ListItemText\n                            primary={todo.name}\n                            style={{overflowWrap: 'break-word'}}\n                            multiline='true'\n                            onClick={() => setChangeNameTodo(true)} />\n                    }\n                </Grid>\n                <Grid item xs={2}>\n                    <ListItemText>\n                        {todo.updatedAt}\n                    </ListItemText>\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton\n                        aria-label='delete'\n                        disabled={disableButton}\n                        onClick={() => handleDelete()}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </ListItem>\n    )\n}\n\nexport default TodoItem;","import React from 'react';\nimport { Button, ButtonGroup } from '@material-ui/core';\n\nfunction TodoFilter({ todoStatus, setTodoStatus }) {\n\n    return (\n        <ButtonGroup>\n            <Button\n                onClick={() => setTodoStatus('')}\n                variant={todoStatus === '' ? 'contained' : 'outlined'}\n                color='default'>\n                All\n            </Button>\n            <Button\n                onClick={() => setTodoStatus('done')}\n                variant={todoStatus === 'done' ? 'contained' : 'outlined'}\n                color='primary'>\n                Done\n            </Button>\n            <Button\n                onClick={() => setTodoStatus('undone')}\n                variant={todoStatus === 'undone' ? 'contained' : 'outlined'}\n                color='secondary'>\n                Undone\n            </Button>\n        </ButtonGroup>\n    )\n}\n\nexport default TodoFilter;","import React from 'react';\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nfunction TodoSort({ todoSort, setTodoSort}) {\n\n    const handleSortTask = (sort) => {\n        if (sort !== todoSort){\n            setTodoSort(sort);\n        }\n    }\n\n    return (\n        <Grid\n            container\n            direction='row'\n            alignItems='center'>\n            <Typography\n                variant='h6'\n                component='h2'>\n                Sorted by Date\n            </Typography>\n            <IconButton\n                color={todoSort === 'desc' ? 'primary' : 'default'}\n                onClick={() => handleSortTask('desc')}\n                aria-label='delete'\n                size='medium'>\n                <ArrowUpwardIcon fontSize='inherit' />\n            </IconButton>\n            <IconButton\n                color={todoSort === 'asc' ? 'primary' : 'default'}\n                onClick={() => handleSortTask('asc')}\n                aria-label='delete'\n                size='medium'>\n                <ArrowDownwardIcon fontSize='inherit' />\n            </IconButton>\n        </Grid>\n    )\n}\n\nexport default TodoSort;","import { Button, ButtonGroup, Grid } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport React from 'react';\n\nfunction Pagination({ pageCount, currentPage, setCurrentPage }) {\n    \n    const pages = new Array(pageCount).fill('').map((_, i) => i + 1)\n    return (\n        <Grid\n            container\n            justify='center'>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(1)}>\n                <ArrowBackIos />\n            </Button>\n            <Grid>\n                <ButtonGroup>\n                    {pages.map(item => (\n                        <Button\n                            key={item}\n                            color='primary'\n                            variant={item === currentPage ? 'contained' : 'outlined'}\n                            onClick={() => setCurrentPage(item)}>\n                            {item}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </Grid>\n            <Button\n                color='primary'\n                onClick={() => setCurrentPage(pages.length)}>\n                <ArrowForwardIos />\n            </Button>\n        </Grid>\n    )\n}\n\nexport default Pagination;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_URL\n});","import React, { useCallback, useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport TodoForm from './TodoForm';\nimport List from '@material-ui/core/List';\nimport TodoItem from './TodoItem';\nimport TodoFilter from './TodoFilter';\nimport TodoSort from './TodoSort';\nimport { Grid } from '@material-ui/core';\nimport Pagination from './Pagination';\nimport axios from '../axiosConfig';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { AlertTitle } from '@material-ui/lab';\nimport * as jwt from 'jsonwebtoken';\n\nfunction Todo({ setIsLogin }) {\n\n    // State\n    const [todos, setTodos] = useState([]);\n    const [todoStatus, setTodoStatus] = useState('');\n    const [todoSort, setTodoSort] = useState('desc');\n    const [pageCount, setPageCount] = useState(1)\n    const [currentPage, setCurrentPage] = useState(1);\n    const [errorAlert, setErrorAlert] = useState({ alert: false, message: 'message', statusCode: 'status' });\n\n    // Fetch API\n    // GET\n    const fetchTodos = useCallback(async () => {\n        try {\n            const token = localStorage.getItem('token')\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            const response = await axios.get('/tasks', {\n                params: {\n                    filterBy: todoStatus,\n                    orderBy: todoSort,\n                    page: currentPage,\n                    limit: 5\n                }\n            });\n            setPageCount(response.data.pageCount);\n            setTodos(response.data.rows);\n        } catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n\n            const validToken = jwt.decode(localStorage.token);\n            if (validToken) {\n                setIsLogin(true);\n                return;\n            }\n            localStorage.removeItem('token');\n            setIsLogin(false);\n        }\n    }, [setIsLogin, todoStatus, todoSort, currentPage]);\n\n    useEffect(() => {\n        fetchTodos()\n    }, [fetchTodos])\n\n    // POST\n    // Add new todo\n    const addTodo = async (todoName) => {\n        try {\n            await axios.post('/task',\n                {\n                    name: todoName,\n                    done: false,\n                });\n            await fetchTodos();\n        }\n        catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n\n    // DELETE\n    // Remove todo\n    const removeTodo = async (id) => {\n        try {\n            await axios.delete(`task/${id}`);\n            await fetchTodos();\n        }\n        catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n    // PATCH\n    // Change and rename todo\n    const changeTodo = async (todo, name, done) => {\n        try {\n            await axios.patch(`/task/${todo.uuid}`, {\n                name: name,\n                done: done\n            });\n            await fetchTodos();\n        }\n        catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n\n    const closeAlert = () => {\n        setErrorAlert(prev => ({ ...prev, alert: false }));\n    }\n\n    return (\n        <div className='wrapper'>\n            <Typography\n                style={{ marginTop: 100 }}\n                variant='h2'\n                align='center'>\n                Todo\n            </Typography>\n            <TodoForm addTodo={addTodo} />\n            <Grid\n                container\n                direction='row'\n                justify='space-between'\n                alignItems='center'>\n                <Grid>\n                    <TodoFilter\n                        todoStatus={todoStatus}\n                        setTodoStatus={setTodoStatus}\n                    />\n                </Grid>\n                <Grid>\n                    <TodoSort\n                        todoSort={todoSort}\n                        setTodoSort={setTodoSort}>\n                    </TodoSort>\n                </Grid>\n            </Grid>\n            <List>\n                {todos.map(todo => \n                    <TodoItem\n                        key={todo.uuid}\n                        todo={todo}\n                        removeTodo={removeTodo}\n                        changeTodo={changeTodo}\n                    />)\n                }\n            </List>\n            {(pageCount > 1) &&\n                <Pagination\n                    pageCount={pageCount}\n                    currentPage={currentPage}\n                    setCurrentPage={setCurrentPage}>\n                </Pagination>\n            }\n            <Snackbar open={errorAlert.alert} autoHideDuration={3000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity='error'>\n                    <AlertTitle>{`${errorAlert.message}`}</AlertTitle>\n                    {`Status code: ${errorAlert.statusCode}`}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}\n\nexport default Todo;","import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';\nimport { useState } from 'react';\n\nfunction Auth({ isSignup, setIsSignup, signUp, login }) {\n    \n    const [user, setUser] = useState({ name: '', password: '' });\n    \n    const handleChangeUser = (e) => {\n        setUser({ ...user, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <div className='wrapper'>\n            <form onSubmit={e => e.preventDefault()}>\n                <Container>\n                    <Grid\n                        container\n                        direction='column'\n                        justify='center'\n                        align='center'>\n                        <Typography\n                            style={{ marginTop: 100 }}\n                            variant='h3'\n                            align='center'>\n                            {isSignup ? 'SignUp' : 'Login'}\n                        </Typography>\n                        <TextField\n                            type='name'\n                            name='name'\n                            onChange={handleChangeUser}\n                            value={user.name}\n                            style={{ marginTop: 30 }}\n                            label='Username' />\n                        <TextField\n                            type='password'\n                            name='password'\n                            onChange={handleChangeUser}\n                            value={user.password}\n                            style={{ marginTop: 30 }}\n                            label='Password' />\n                    </Grid>\n                    <Grid\n                        style={{ marginTop: 30 }}\n                        container\n                        direction='row'\n                        justify='center'\n                        align='center'>\n                        {isSignup\n                            ? <Button\n                                onClick={() => signUp(user)}\n                                type='submit'\n                                style={{ marginRight: 30, textTransform: 'none' }}\n                                variant='contained'\n                                color='primary'>\n                                SignUp\n                            </Button>\n                            : <Button\n                                onClick={() => login(user)}\n                                type='submit'\n                                style={{ marginRight: 30, textTransform: 'none' }}\n                                variant='contained'\n                                color='primary'>\n                                Login\n                            </Button>}\n                        <Button\n                            onClick={() => setIsSignup(!isSignup)}\n                            style={{ textTransform: 'none' }}\n                            color='primary'>\n                            {isSignup ? 'Do you have account?' : 'No accaunt?'}\n                        </Button>\n                    </Grid>\n                </Container>\n            </form>\n        </div>\n    )\n}\n\nexport default Auth;","import { useCallback, useEffect, useState } from 'react';\nimport { Container, Snackbar } from '@material-ui/core';\nimport { Header } from './components/Header';\nimport Todo from './components/Todo';\nimport Auth from './components/Auth';\nimport axios from './axiosConfig';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport * as jwt from 'jsonwebtoken';\n\nfunction App() {\n\n    const [isSignup, setIsSignup] = useState(false);\n    const [isLogin, setIsLogin] = useState(false);\n    const [errorAlert, setErrorAlert] = useState({ alert: false, message: 'message', statusCode: 'status' });\n\n    const checkToken = useCallback(() => {\n        if (localStorage.token) {\n            const validToken = jwt.decode(localStorage.token);\n            if (validToken) {\n                setIsLogin(true);\n                return;\n            }\n            localStorage.removeItem('token');\n            setIsLogin(false);\n        };\n    }, []);\n\n    useEffect(() => {\n        checkToken();\n    }, [checkToken]);\n\n    const login = async ({ name, password }) => {\n        try {\n            const res = await axios.post('/login', {\n                name,\n                password\n            });\n            const token = res.data.token;\n            localStorage.setItem('token', token);\n            localStorage.setItem('name', name);\n            setIsLogin(true);\n        } catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n\n    const signUp = async ({ name, password }) => {\n        try {\n            await axios.post('/registration', {\n                name,\n                password\n            })\n            login({ name, password })\n        } catch (err) {\n            const message = err.response.data.message;\n            const status = err.response.status;\n            setErrorAlert({ alert: true, message: message, statusCode: status });\n        }\n    }\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('name');\n        setIsLogin(false);\n    }\n\n    const closeAlert = () => {\n        setErrorAlert(prev => ({ ...prev, alert: false }));\n    }\n\n    return (\n        <Container\n            style={{ padding: 0 }}\n            maxWidth='xl'>\n            <Header\n                isLogin={isLogin}\n                logout={logout} />\n            {isLogin\n                ? <Todo\n                    setIsLogin={setIsLogin}\n                    />\n                : <Auth\n                    isSignup={isSignup}\n                    setIsSignup={setIsSignup}\n                    signUp={signUp}\n                    login={login}\n                    />}\n            <Snackbar open={errorAlert.alert} autoHideDuration={3000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity='error'>\n                    <AlertTitle>{`${errorAlert.message}`}</AlertTitle>\n                    {`Status code: ${errorAlert.statusCode}`}\n                </Alert>\n            </Snackbar>\n        </Container>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}